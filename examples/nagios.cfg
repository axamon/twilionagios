### Contact, i.e. the person that gets called
# this is where you set the phone number for nagios to call
# change the contact_name to something more appriopriate
define contact {
  use           admin-via-twilio
  contact_name  admin
  alias         admin
  pager         5551234567 ; replace with the phone number you want twilio to call
}

### Host definition and check
# example host and service that will page via twilio if there is a problem
# if the notes section is definied, twilio will read that instead of the host_name
define host {
  use                     host-template
  host_name               localhost
  alias                   localhost
  address                 127.0.0.1
  contacts                admin
  check_command           check-host-alive
  notes                   production database server
}

### Service Check
# update the contact to match what you want
define service{
  use                 service-template
  host_name           localhost
  service_description http
  check_command       check_http
  contacts            admin
}

## Twilio specific commands
# these are the command definitions required to use the twilio scripts
# you need update the command_line to point to where you installed the script
define command{
  command_name notify-host-by-phone
  command_line /path/to/nagios_twilio_pager.py $CONTACTPAGER$ host host $HOSTNAME$
}

define command{
  command_name notify-service-by-phone
  command_line /path/to/nagios_twilio_pager.py $CONTACTPAGER$ service $SERVICEDESC$ $HOSTNAME$
}


### Templates and other stuff -- nothing to change below this line to get it to work
# template for setting up admins to use the twilio pager
define contact{
  name                            admin-via-twilio
  service_notification_period     24x7
  host_notification_period        24x7
  service_notification_options    w,u,c,r,f,s
  host_notification_options       d,u,r,f,s	
  service_notification_commands   notify-service-by-phone
  host_notification_commands      notify-host-by-phone
  register                        0  
}

###
# begin template stuff and other needed things to get nagios to run
define host{
  name                            host-template
  max_check_attempts              3
  notification_interval           120
  notifications_enabled           1
  event_handler_enabled           1
  flap_detection_enabled          1
	check_period			              24x7
  check_interval			            5	
  retry_interval			            1
  retain_status_information       1
  notification_interval		        120
  register                        0 
}

define service{
	name                            service-template
  active_checks_enabled           1
  passive_checks_enabled          1
  parallelize_check               1
  obsess_over_service             1
  check_freshness                 0
  notifications_enabled           1
  event_handler_enabled           1
  flap_detection_enabled          1
  failure_prediction_enabled      1
  process_perf_data               1
  retain_status_information       1
  retain_nonstatus_information    1
  is_volatile                     0
  check_period                    24x7
  max_check_attempts              3
  normal_check_interval           10
  retry_check_interval            2
  notification_options            w,u,c,r
  notification_interval           60
  notification_period             24x7
  event_handler_enabled           0
  max_check_attempts              3
  normal_check_interval           3
  retry_check_interval            1 
  register                        0
}

define timeperiod{
 timeperiod_name 24x7
  alias           24 Hours A Day, 7 Days A Week
  sunday          00:00-24:00
  monday          00:00-24:00
  tuesday         00:00-24:00
  wednesday       00:00-24:00
  thursday        00:00-24:00
  friday          00:00-24:00
  saturday        00:00-24:00
}  

define command{
  command_name    check-host-alive
  command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
}
define command{
  command_name    check_http
  command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
 }
